---
import { navigation } from "../navigation";
import cn from "../utils/cn";
import { Menu, X, Phone } from "@lucide/astro";
import isActiveLink from "../utils/is-active-link";
import { contact } from "../data";

const currentPath = Astro.url.pathname;
---

<div class="relative md:hidden block">
  <!-- Menu Button -->
  <button id="menuButton" aria-label="Open sidebar">
    <Menu />
  </button>

  <!-- Sidebar Overlay -->
  <button
    id="sidebarOverlay"
    aria-label="Close sidebar"
    class="fixed inset-0 bg-foreground/30 hidden focus:outline-none"></button>

  <!-- Sidebar -->
  <aside
    id="sidebar"
    class="fixed font-heading right-0 top-0 h-full w-64 bg-background shadow-lg transform translate-x-full transition-transform duration-300 hidden"
  >
    <div class="p-4 flex flex-col h-full gap-8">
      <header class="flex justify-end">
        <button id="closeButton" aria-label="Close sidebar">
          <X />
        </button>
      </header>

      <!-- Links -->
      <nav class="flex flex-col space-y-2">
        {
          navigation.map((link) => {
            const isActive = isActiveLink(currentPath, link);

            return (
              <a
                href={link.href}
                class={cn(
                  "px-2 py-1 hover:bg-muted/20 hover:text-muted-foreground rounded focus:outline-none focus:ring-2 focus:ring-primary",
                  isActive && "bg-muted/20 text-muted-foreground"
                )}
              >
                {link.label}
              </a>
            );
          })
        }
      </nav>

      <footer class="mt-auto flex flex-col gap-4 items-center">
        <p class="text flex items-center gap-2 text-muted-foreground">
          <Phone size={16} />
          <a href={`tel:${contact.phone}`}>{contact.phoneFormatted}</a>
        </p>
      </footer>
    </div>
  </aside>
</div>

<script>
  const menuButton = document.getElementById("menuButton")!;
  const sidebar = document.getElementById("sidebar")!;
  const overlay = document.getElementById("sidebarOverlay")!;
  const closeButton = document.getElementById("closeButton")!;

  function openSidebar() {
    sidebar.classList.remove("translate-x-full");
    overlay.classList.remove("hidden");
    // Auto-focus the first focusable element (close button)
    closeButton.focus();
  }

  function closeSidebar() {
    sidebar.classList.add("translate-x-full");
    overlay.classList.add("hidden");
    menuButton.focus();
  }

  menuButton.addEventListener("click", openSidebar);
  closeButton.addEventListener("click", closeSidebar);
  overlay.addEventListener("click", closeSidebar);

  // Optional: Close sidebar with Escape key
  document.addEventListener("keydown", (e) => {
    if (e.key === "Escape" && !sidebar.classList.contains("translate-x-full")) {
      closeSidebar();
    }
  });

  requestAnimationFrame(() => {
    sidebar.classList.remove("hidden");
  });
</script>
